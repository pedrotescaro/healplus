
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profile data of others (for chat names/photos),
    // but can only create or update their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      // Disallow deletion of user profiles for now to prevent orphaned data.
      allow delete: if false;

      // A professional can only write to their own subcollections.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Reports can be created by the professional.
    // They can be read by the professional who created it or the patient it belongs to.
    match /reports/{reportId} {
      allow read: if request.auth.uid == resource.data.professionalId || request.auth.uid == resource.data.patientId;
      allow create: if request.resource.data.professionalId == request.auth.uid;
      // Only the professional who created it can update or delete it.
      allow update, delete: if request.auth.uid == resource.data.professionalId;
    }
    
    // Chat messages can only be read/written by the two participants in the chat.
    // The chatId is assumed to be constructed as `uid1_uid2` with sorted UIDs.
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth.uid in chatId.split('_');
    }
  }
}
