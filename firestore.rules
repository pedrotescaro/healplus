rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Anyone can create their own user document (on signup).
    // - Authenticated users can read public profile info (for chat).
    // - A user can only update or delete their own document.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;

      // Subcollections (anamnesis, comparisons) can only be accessed by the owner.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Reports collection:
    // - Can only be created by a professional.
    // - Can be read by the professional who created it OR the patient it belongs to.
    // - Professionals can list reports to count them for the dashboard.
    match /reports/{reportId} {
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professional';
      allow read, list: if request.auth != null && 
                    (resource.data.professionalId == request.auth.uid || resource.data.patientId == request.auth.uid ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professional');
      allow update, delete: if request.auth != null && resource.data.professionalId == request.auth.uid;
    }

    // Chats collection:
    // - Can be read or written to only by the two users involved in the chat.
    // The chat document ID is formatted as "userId1_userId2" with sorted UIDs.
    match /chats/{chatId}/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid in chatId.split('_');
    }
  }
}
    